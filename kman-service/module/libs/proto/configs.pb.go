// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: configs.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConfigAddReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Key           string                 `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Namespace     string                 `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ProjectId     int32                  `protobuf:"varint,5,opt,name=projectId,proto3" json:"projectId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigAddReq) Reset() {
	*x = ConfigAddReq{}
	mi := &file_configs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigAddReq) ProtoMessage() {}

func (x *ConfigAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_configs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigAddReq.ProtoReflect.Descriptor instead.
func (*ConfigAddReq) Descriptor() ([]byte, []int) {
	return file_configs_proto_rawDescGZIP(), []int{0}
}

func (x *ConfigAddReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConfigAddReq) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ConfigAddReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ConfigAddReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ConfigAddReq) GetProjectId() int32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

type ConfigAddResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigAddResp) Reset() {
	*x = ConfigAddResp{}
	mi := &file_configs_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigAddResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigAddResp) ProtoMessage() {}

func (x *ConfigAddResp) ProtoReflect() protoreflect.Message {
	mi := &file_configs_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigAddResp.ProtoReflect.Descriptor instead.
func (*ConfigAddResp) Descriptor() ([]byte, []int) {
	return file_configs_proto_rawDescGZIP(), []int{1}
}

type ConfigEditReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Namespace     string                 `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ProjectId     int32                  `protobuf:"varint,4,opt,name=projectId,proto3" json:"projectId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigEditReq) Reset() {
	*x = ConfigEditReq{}
	mi := &file_configs_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigEditReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigEditReq) ProtoMessage() {}

func (x *ConfigEditReq) ProtoReflect() protoreflect.Message {
	mi := &file_configs_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigEditReq.ProtoReflect.Descriptor instead.
func (*ConfigEditReq) Descriptor() ([]byte, []int) {
	return file_configs_proto_rawDescGZIP(), []int{2}
}

func (x *ConfigEditReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ConfigEditReq) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ConfigEditReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ConfigEditReq) GetProjectId() int32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

type ConfigEditResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigEditResp) Reset() {
	*x = ConfigEditResp{}
	mi := &file_configs_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigEditResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigEditResp) ProtoMessage() {}

func (x *ConfigEditResp) ProtoReflect() protoreflect.Message {
	mi := &file_configs_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigEditResp.ProtoReflect.Descriptor instead.
func (*ConfigEditResp) Descriptor() ([]byte, []int) {
	return file_configs_proto_rawDescGZIP(), []int{3}
}

type ConfigReleaseReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ids           []int64                `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ProjectId     int32                  `protobuf:"varint,3,opt,name=projectId,proto3" json:"projectId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigReleaseReq) Reset() {
	*x = ConfigReleaseReq{}
	mi := &file_configs_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigReleaseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigReleaseReq) ProtoMessage() {}

func (x *ConfigReleaseReq) ProtoReflect() protoreflect.Message {
	mi := &file_configs_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigReleaseReq.ProtoReflect.Descriptor instead.
func (*ConfigReleaseReq) Descriptor() ([]byte, []int) {
	return file_configs_proto_rawDescGZIP(), []int{4}
}

func (x *ConfigReleaseReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *ConfigReleaseReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ConfigReleaseReq) GetProjectId() int32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

type ConfigReleaseResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigReleaseResp) Reset() {
	*x = ConfigReleaseResp{}
	mi := &file_configs_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigReleaseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigReleaseResp) ProtoMessage() {}

func (x *ConfigReleaseResp) ProtoReflect() protoreflect.Message {
	mi := &file_configs_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigReleaseResp.ProtoReflect.Descriptor instead.
func (*ConfigReleaseResp) Descriptor() ([]byte, []int) {
	return file_configs_proto_rawDescGZIP(), []int{5}
}

type ConfigListReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int64                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int64                  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Key           string                 `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Namespace     string                 `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ProjectId     int32                  `protobuf:"varint,5,opt,name=projectId,proto3" json:"projectId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigListReq) Reset() {
	*x = ConfigListReq{}
	mi := &file_configs_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigListReq) ProtoMessage() {}

func (x *ConfigListReq) ProtoReflect() protoreflect.Message {
	mi := &file_configs_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigListReq.ProtoReflect.Descriptor instead.
func (*ConfigListReq) Descriptor() ([]byte, []int) {
	return file_configs_proto_rawDescGZIP(), []int{6}
}

func (x *ConfigListReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ConfigListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ConfigListReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ConfigListReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ConfigListReq) GetProjectId() int32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

type ConfigInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Key           string                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value         string                 `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	History1      string                 `protobuf:"bytes,4,opt,name=history1,proto3" json:"history1,omitempty"`
	History2      string                 `protobuf:"bytes,5,opt,name=history2,proto3" json:"history2,omitempty"`
	Name          string                 `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	UpdateTime    string                 `protobuf:"bytes,7,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	CreateTime    string                 `protobuf:"bytes,8,opt,name=createTime,proto3" json:"createTime,omitempty"`
	Status        string                 `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigInfo) Reset() {
	*x = ConfigInfo{}
	mi := &file_configs_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigInfo) ProtoMessage() {}

func (x *ConfigInfo) ProtoReflect() protoreflect.Message {
	mi := &file_configs_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigInfo.ProtoReflect.Descriptor instead.
func (*ConfigInfo) Descriptor() ([]byte, []int) {
	return file_configs_proto_rawDescGZIP(), []int{7}
}

func (x *ConfigInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ConfigInfo) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ConfigInfo) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ConfigInfo) GetHistory1() string {
	if x != nil {
		return x.History1
	}
	return ""
}

func (x *ConfigInfo) GetHistory2() string {
	if x != nil {
		return x.History2
	}
	return ""
}

func (x *ConfigInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConfigInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *ConfigInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ConfigInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type ConfigListResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int64                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int64                  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	TotalPage     int64                  `protobuf:"varint,3,opt,name=totalPage,proto3" json:"totalPage,omitempty"`
	TotalCount    int64                  `protobuf:"varint,4,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
	List          []*ConfigInfo          `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigListResp) Reset() {
	*x = ConfigListResp{}
	mi := &file_configs_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigListResp) ProtoMessage() {}

func (x *ConfigListResp) ProtoReflect() protoreflect.Message {
	mi := &file_configs_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigListResp.ProtoReflect.Descriptor instead.
func (*ConfigListResp) Descriptor() ([]byte, []int) {
	return file_configs_proto_rawDescGZIP(), []int{8}
}

func (x *ConfigListResp) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ConfigListResp) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ConfigListResp) GetTotalPage() int64 {
	if x != nil {
		return x.TotalPage
	}
	return 0
}

func (x *ConfigListResp) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ConfigListResp) GetList() []*ConfigInfo {
	if x != nil {
		return x.List
	}
	return nil
}

var File_configs_proto protoreflect.FileDescriptor

const file_configs_proto_rawDesc = "" +
	"\n" +
	"\rconfigs.proto\"\x86\x01\n" +
	"\fConfigAddReq\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\x12\x10\n" +
	"\x03key\x18\x03 \x01(\tR\x03key\x12\x1c\n" +
	"\tnamespace\x18\x04 \x01(\tR\tnamespace\x12\x1c\n" +
	"\tprojectId\x18\x05 \x01(\x05R\tprojectId\"\x0f\n" +
	"\rConfigAddResp\"q\n" +
	"\rConfigEditReq\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x1c\n" +
	"\tprojectId\x18\x04 \x01(\x05R\tprojectId\"\x10\n" +
	"\x0eConfigEditResp\"`\n" +
	"\x10ConfigReleaseReq\x12\x10\n" +
	"\x03ids\x18\x01 \x03(\x03R\x03ids\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x1c\n" +
	"\tprojectId\x18\x03 \x01(\x05R\tprojectId\"\x13\n" +
	"\x11ConfigReleaseResp\"\x8d\x01\n" +
	"\rConfigListReq\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x03R\x04page\x12\x1a\n" +
	"\bpageSize\x18\x02 \x01(\x03R\bpageSize\x12\x10\n" +
	"\x03key\x18\x03 \x01(\tR\x03key\x12\x1c\n" +
	"\tnamespace\x18\x04 \x01(\tR\tnamespace\x12\x1c\n" +
	"\tprojectId\x18\x05 \x01(\x05R\tprojectId\"\xe8\x01\n" +
	"\n" +
	"ConfigInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x10\n" +
	"\x03key\x18\x02 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x03 \x01(\tR\x05value\x12\x1a\n" +
	"\bhistory1\x18\x04 \x01(\tR\bhistory1\x12\x1a\n" +
	"\bhistory2\x18\x05 \x01(\tR\bhistory2\x12\x12\n" +
	"\x04name\x18\x06 \x01(\tR\x04name\x12\x1e\n" +
	"\n" +
	"updateTime\x18\a \x01(\tR\n" +
	"updateTime\x12\x1e\n" +
	"\n" +
	"createTime\x18\b \x01(\tR\n" +
	"createTime\x12\x16\n" +
	"\x06status\x18\t \x01(\tR\x06status\"\x9f\x01\n" +
	"\x0eConfigListResp\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x03R\x04page\x12\x1a\n" +
	"\bpageSize\x18\x02 \x01(\x03R\bpageSize\x12\x1c\n" +
	"\ttotalPage\x18\x03 \x01(\x03R\ttotalPage\x12\x1e\n" +
	"\n" +
	"totalCount\x18\x04 \x01(\x03R\n" +
	"totalCount\x12\x1f\n" +
	"\x04list\x18\x05 \x03(\v2\v.ConfigInfoR\x04list2\xba\x01\n" +
	"\x06Config\x12&\n" +
	"\x03Add\x12\r.ConfigAddReq\x1a\x0e.ConfigAddResp\"\x00\x12)\n" +
	"\x04Edit\x12\x0e.ConfigEditReq\x1a\x0f.ConfigEditResp\"\x00\x122\n" +
	"\aRelease\x12\x11.ConfigReleaseReq\x1a\x12.ConfigReleaseResp\"\x00\x12)\n" +
	"\x04List\x12\x0e.ConfigListReq\x1a\x0f.ConfigListResp\"\x00B\tZ\a./protob\x06proto3"

var (
	file_configs_proto_rawDescOnce sync.Once
	file_configs_proto_rawDescData []byte
)

func file_configs_proto_rawDescGZIP() []byte {
	file_configs_proto_rawDescOnce.Do(func() {
		file_configs_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_configs_proto_rawDesc), len(file_configs_proto_rawDesc)))
	})
	return file_configs_proto_rawDescData
}

var file_configs_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_configs_proto_goTypes = []any{
	(*ConfigAddReq)(nil),      // 0: ConfigAddReq
	(*ConfigAddResp)(nil),     // 1: ConfigAddResp
	(*ConfigEditReq)(nil),     // 2: ConfigEditReq
	(*ConfigEditResp)(nil),    // 3: ConfigEditResp
	(*ConfigReleaseReq)(nil),  // 4: ConfigReleaseReq
	(*ConfigReleaseResp)(nil), // 5: ConfigReleaseResp
	(*ConfigListReq)(nil),     // 6: ConfigListReq
	(*ConfigInfo)(nil),        // 7: ConfigInfo
	(*ConfigListResp)(nil),    // 8: ConfigListResp
}
var file_configs_proto_depIdxs = []int32{
	7, // 0: ConfigListResp.list:type_name -> ConfigInfo
	0, // 1: Config.Add:input_type -> ConfigAddReq
	2, // 2: Config.Edit:input_type -> ConfigEditReq
	4, // 3: Config.Release:input_type -> ConfigReleaseReq
	6, // 4: Config.List:input_type -> ConfigListReq
	1, // 5: Config.Add:output_type -> ConfigAddResp
	3, // 6: Config.Edit:output_type -> ConfigEditResp
	5, // 7: Config.Release:output_type -> ConfigReleaseResp
	8, // 8: Config.List:output_type -> ConfigListResp
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_configs_proto_init() }
func file_configs_proto_init() {
	if File_configs_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_configs_proto_rawDesc), len(file_configs_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_configs_proto_goTypes,
		DependencyIndexes: file_configs_proto_depIdxs,
		MessageInfos:      file_configs_proto_msgTypes,
	}.Build()
	File_configs_proto = out.File
	file_configs_proto_goTypes = nil
	file_configs_proto_depIdxs = nil
}
