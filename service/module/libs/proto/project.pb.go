// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: project.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProjectAddReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectAddReq) Reset() {
	*x = ProjectAddReq{}
	mi := &file_project_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectAddReq) ProtoMessage() {}

func (x *ProjectAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectAddReq.ProtoReflect.Descriptor instead.
func (*ProjectAddReq) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{0}
}

func (x *ProjectAddReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProjectAddReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type ProjectAddResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectAddResp) Reset() {
	*x = ProjectAddResp{}
	mi := &file_project_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectAddResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectAddResp) ProtoMessage() {}

func (x *ProjectAddResp) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectAddResp.ProtoReflect.Descriptor instead.
func (*ProjectAddResp) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{1}
}

type ProjectEditReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id            int64                  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectEditReq) Reset() {
	*x = ProjectEditReq{}
	mi := &file_project_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectEditReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectEditReq) ProtoMessage() {}

func (x *ProjectEditReq) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectEditReq.ProtoReflect.Descriptor instead.
func (*ProjectEditReq) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{2}
}

func (x *ProjectEditReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProjectEditReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ProjectEditResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectEditResp) Reset() {
	*x = ProjectEditResp{}
	mi := &file_project_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectEditResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectEditResp) ProtoMessage() {}

func (x *ProjectEditResp) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectEditResp.ProtoReflect.Descriptor instead.
func (*ProjectEditResp) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{3}
}

type ProjectListReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int64                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int64                  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectListReq) Reset() {
	*x = ProjectListReq{}
	mi := &file_project_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectListReq) ProtoMessage() {}

func (x *ProjectListReq) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectListReq.ProtoReflect.Descriptor instead.
func (*ProjectListReq) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{4}
}

func (x *ProjectListReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ProjectListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ProjectListReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ProjectInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Namespace     string                 `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	CreateTime    string                 `protobuf:"bytes,4,opt,name=createTime,proto3" json:"createTime,omitempty"`
	OpenId        string                 `protobuf:"bytes,5,opt,name=openId,proto3" json:"openId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectInfo) Reset() {
	*x = ProjectInfo{}
	mi := &file_project_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectInfo) ProtoMessage() {}

func (x *ProjectInfo) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectInfo.ProtoReflect.Descriptor instead.
func (*ProjectInfo) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{5}
}

func (x *ProjectInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProjectInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProjectInfo) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ProjectInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ProjectInfo) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

type ProjectListResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int64                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int64                  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	TotalPage     int64                  `protobuf:"varint,3,opt,name=totalPage,proto3" json:"totalPage,omitempty"`
	TotalCount    int64                  `protobuf:"varint,4,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
	List          []*ProjectInfo         `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectListResp) Reset() {
	*x = ProjectListResp{}
	mi := &file_project_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectListResp) ProtoMessage() {}

func (x *ProjectListResp) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectListResp.ProtoReflect.Descriptor instead.
func (*ProjectListResp) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{6}
}

func (x *ProjectListResp) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ProjectListResp) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ProjectListResp) GetTotalPage() int64 {
	if x != nil {
		return x.TotalPage
	}
	return 0
}

func (x *ProjectListResp) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ProjectListResp) GetList() []*ProjectInfo {
	if x != nil {
		return x.List
	}
	return nil
}

var File_project_proto protoreflect.FileDescriptor

const file_project_proto_rawDesc = "" +
	"\n" +
	"\rproject.proto\"A\n" +
	"\rProjectAddReq\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"\x10\n" +
	"\x0eProjectAddResp\"4\n" +
	"\x0eProjectEditReq\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\x03R\x02id\"\x11\n" +
	"\x0fProjectEditResp\"T\n" +
	"\x0eProjectListReq\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x03R\x04page\x12\x1a\n" +
	"\bpageSize\x18\x02 \x01(\x03R\bpageSize\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\"\x87\x01\n" +
	"\vProjectInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x1e\n" +
	"\n" +
	"createTime\x18\x04 \x01(\tR\n" +
	"createTime\x12\x16\n" +
	"\x06openId\x18\x05 \x01(\tR\x06openId\"\xa1\x01\n" +
	"\x0fProjectListResp\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x03R\x04page\x12\x1a\n" +
	"\bpageSize\x18\x02 \x01(\x03R\bpageSize\x12\x1c\n" +
	"\ttotalPage\x18\x03 \x01(\x03R\ttotalPage\x12\x1e\n" +
	"\n" +
	"totalCount\x18\x04 \x01(\x03R\n" +
	"totalCount\x12 \n" +
	"\x04list\x18\x05 \x03(\v2\f.ProjectInfoR\x04list2\x8d\x01\n" +
	"\aProject\x12(\n" +
	"\x03Add\x12\x0e.ProjectAddReq\x1a\x0f.ProjectAddResp\"\x00\x12+\n" +
	"\x04Edit\x12\x0f.ProjectEditReq\x1a\x10.ProjectEditResp\"\x00\x12+\n" +
	"\x04List\x12\x0f.ProjectListReq\x1a\x10.ProjectListResp\"\x00B\tZ\a./protob\x06proto3"

var (
	file_project_proto_rawDescOnce sync.Once
	file_project_proto_rawDescData []byte
)

func file_project_proto_rawDescGZIP() []byte {
	file_project_proto_rawDescOnce.Do(func() {
		file_project_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_proto_rawDesc), len(file_project_proto_rawDesc)))
	})
	return file_project_proto_rawDescData
}

var file_project_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_project_proto_goTypes = []any{
	(*ProjectAddReq)(nil),   // 0: ProjectAddReq
	(*ProjectAddResp)(nil),  // 1: ProjectAddResp
	(*ProjectEditReq)(nil),  // 2: ProjectEditReq
	(*ProjectEditResp)(nil), // 3: ProjectEditResp
	(*ProjectListReq)(nil),  // 4: ProjectListReq
	(*ProjectInfo)(nil),     // 5: ProjectInfo
	(*ProjectListResp)(nil), // 6: ProjectListResp
}
var file_project_proto_depIdxs = []int32{
	5, // 0: ProjectListResp.list:type_name -> ProjectInfo
	0, // 1: Project.Add:input_type -> ProjectAddReq
	2, // 2: Project.Edit:input_type -> ProjectEditReq
	4, // 3: Project.List:input_type -> ProjectListReq
	1, // 4: Project.Add:output_type -> ProjectAddResp
	3, // 5: Project.Edit:output_type -> ProjectEditResp
	6, // 6: Project.List:output_type -> ProjectListResp
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_project_proto_init() }
func file_project_proto_init() {
	if File_project_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_proto_rawDesc), len(file_project_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_project_proto_goTypes,
		DependencyIndexes: file_project_proto_depIdxs,
		MessageInfos:      file_project_proto_msgTypes,
	}.Build()
	File_project_proto = out.File
	file_project_proto_goTypes = nil
	file_project_proto_depIdxs = nil
}
